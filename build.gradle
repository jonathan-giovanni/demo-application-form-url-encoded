plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.hv.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
}

//evita conflicto de loggers
configurations.all {
	exclude module: 'slf4j-log4j12'
}

dependencies {
	//permite exponer informacion sobre el Boot ya desplegado
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//permite exposicion de servicio REST
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//validacion de @requeried en DTO
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//driver para conexion a base de datos postgreSQL
	runtimeOnly 'org.postgresql:postgresql'
	//API de persistencia
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//mapeo de DTO a clases model
	implementation 'org.modelmapper:modelmapper:2.3.8'
	//documentacion sobre los endpoint (servicios REST)
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	//generacion de pagina web swagger-ui para pruebas de endpoint
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	//seguriad
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
